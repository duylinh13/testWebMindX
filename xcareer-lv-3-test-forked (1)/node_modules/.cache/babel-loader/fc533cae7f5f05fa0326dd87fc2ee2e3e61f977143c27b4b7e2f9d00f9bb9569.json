{"ast":null,"code":"var _jsxFileName = \"D:\\\\testMindX\\\\mindx\\\\xcareer-lv-3-test-forked (1)\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\n// App.js\nimport React, { useEffect } from \"react\";\nimport TodoList from \"./TodoList\";\nimport TodoListHeader from \"./TodoListHeader\";\nimport Form from \"./Form\";\nimport Footer from \"./Footer\";\nimport { Routes, Route } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  _s();\n  const [showNotFinishedOnly, setShowNotFinishedOnly] = useState(false);\n  useEffect(() => {\n    const storedTasks = JSON.parse(localStorage.getItem(\"tasks\")) || [];\n    setTasks(storedTasks);\n  }, []);\n  const addTask = (title, dueDate) => {\n    const newTask = {\n      title,\n      done: false,\n      dueDate\n    };\n    setTasks([...tasks, newTask]);\n    localStorage.setItem(\"tasks\", JSON.stringify([...tasks, newTask]));\n  };\n  const toggleShowNotFinished = value => {\n    // Handle the state change of showing not finished tasks\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(Routes, {\n      children: /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        element: /*#__PURE__*/_jsxDEV(Home, {\n          showNotFinishedOnly: false\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 20\n        }, this) // Pass the prop here\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"+Aa61J0PsIx1mAHU2C4mzVe8+Hc=\");\n_c = App;\nconst Home = _ref => {\n  let {\n    tasks,\n    addTask,\n    toggleShowNotFinished\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(TodoListHeader, {\n        toggleShowNotFinished: toggleShowNotFinished\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TodoList, {\n        tasks: tasks,\n        showNotFinishedOnly: showNotFinishedOnly\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form, {\n        addTask: addTask\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n};\n_c2 = Home;\nvar _c, _c2;\n$RefreshReg$(_c, \"App\");\n$RefreshReg$(_c2, \"Home\");","map":{"version":3,"names":["React","useEffect","TodoList","TodoListHeader","Form","Footer","Routes","Route","jsxDEV","_jsxDEV","App","_s","showNotFinishedOnly","setShowNotFinishedOnly","useState","storedTasks","JSON","parse","localStorage","getItem","setTasks","addTask","title","dueDate","newTask","done","tasks","setItem","stringify","toggleShowNotFinished","value","className","children","path","element","Home","fileName","_jsxFileName","lineNumber","columnNumber","_c","_ref","_c2","$RefreshReg$"],"sources":["D:/testMindX/mindx/xcareer-lv-3-test-forked (1)/src/App.js"],"sourcesContent":["// App.js\nimport React, { useEffect } from \"react\";\nimport TodoList from \"./TodoList\";\nimport TodoListHeader from \"./TodoListHeader\";\nimport Form from \"./Form\";\nimport Footer from \"./Footer\";\nimport { Routes, Route } from \"react-router-dom\";\n\nexport default function App() {\n  const [showNotFinishedOnly, setShowNotFinishedOnly] = useState(false);\n\n  useEffect(() => {\n    const storedTasks = JSON.parse(localStorage.getItem(\"tasks\")) || [];\n    setTasks(storedTasks);\n  }, []);\n\n  const addTask = (title, dueDate) => {\n    const newTask = { title, done: false, dueDate };\n    setTasks([...tasks, newTask]);\n    localStorage.setItem(\"tasks\", JSON.stringify([...tasks, newTask]));\n  };\n\n  const toggleShowNotFinished = (value) => {\n    // Handle the state change of showing not finished tasks\n  };\n\n  return (\n    <div className=\"App\">\n      <Routes>\n        <Route\n          path=\"/\"\n          element={<Home showNotFinishedOnly={false} />} // Pass the prop here\n        />\n      </Routes>\n    </div>\n  );\n}\n\nconst Home = ({ tasks, addTask, toggleShowNotFinished }) => {\n  return (\n    <div className=\"App\">\n      <div className=\"container\">\n        <TodoListHeader toggleShowNotFinished={toggleShowNotFinished} />\n        <TodoList tasks={tasks} showNotFinishedOnly={showNotFinishedOnly} />\n        <Form addTask={addTask} />\n      </div>\n      <Footer />\n    </div>\n  );\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}