{"ast":null,"code":"var _jsxFileName = \"D:\\\\testMindX\\\\mindx\\\\xcareer-lv-3-test-forked (1)\\\\src\\\\TodoList.js\";\nimport React from \"react\";\nimport { FaRegCircle, FaRegCheckCircle } from \"react-icons/fa\";\nimport { DragDropContext, Droppable, Draggable } from \"react-beautiful-dnd\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TodoList = _ref => {\n  let {\n    tasks,\n    toggleDone,\n    showUndoneOnly,\n    onDragEnd\n  } = _ref;\n  const filteredTasks = showUndoneOnly ? tasks.filter(task => !task.done) : tasks;\n  const calculateDaysLeft = dueDate => {\n    if (!dueDate) return null;\n    const today = new Date();\n    const due = new Date(dueDate);\n    const timeDiff = due.getTime() - today.getTime();\n    const daysLeft = Math.ceil(timeDiff / (1000 * 3600 * 24));\n    return daysLeft;\n  };\n  return /*#__PURE__*/_jsxDEV(DragDropContext, {\n    onDragEnd: onDragEnd,\n    children: /*#__PURE__*/_jsxDEV(Droppable, {\n      droppableId: \"tasks\",\n      children: provided => /*#__PURE__*/_jsxDEV(\"div\", {\n        ...provided.droppableProps,\n        ref: provided.innerRef,\n        className: \"todo-list-container\",\n        children: [filteredTasks.map((task, index) => /*#__PURE__*/_jsxDEV(Draggable, {\n          draggableId: task.id.toString(),\n          index: index,\n          children: provided => /*#__PURE__*/_jsxDEV(\"div\", {\n            ref: provided.innerRef,\n            ...provided.draggableProps,\n            ...provided.dragHandleProps,\n            className: \"todo-item-container \".concat(task.done ? \"done\" : \"\"),\n            children: [task.done ? /*#__PURE__*/_jsxDEV(FaRegCheckCircle, {\n              color: \"#9a9a9a\",\n              className: \"item-done-button\",\n              onClick: () => toggleDone(task.id)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 42,\n              columnNumber: 23\n            }, this) : /*#__PURE__*/_jsxDEV(FaRegCircle, {\n              color: \"#9a9a9a\",\n              className: \"item-done-button\",\n              onClick: () => toggleDone(task.id)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 23\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"item-title\",\n              children: task.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 21\n            }, this), task.dueDate && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"due-date\",\n              children: [\"Due in \", calculateDaysLeft(task.dueDate), \" days\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 23\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 19\n          }, this)\n        }, task.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 15\n        }, this)), provided.placeholder]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n};\n_c = TodoList;\nexport default TodoList;\nvar _c;\n$RefreshReg$(_c, \"TodoList\");","map":{"version":3,"names":["React","FaRegCircle","FaRegCheckCircle","DragDropContext","Droppable","Draggable","jsxDEV","_jsxDEV","TodoList","_ref","tasks","toggleDone","showUndoneOnly","onDragEnd","filteredTasks","filter","task","done","calculateDaysLeft","dueDate","today","Date","due","timeDiff","getTime","daysLeft","Math","ceil","children","droppableId","provided","droppableProps","ref","innerRef","className","map","index","draggableId","id","toString","draggableProps","dragHandleProps","concat","color","onClick","fileName","_jsxFileName","lineNumber","columnNumber","title","placeholder","_c","$RefreshReg$"],"sources":["D:/testMindX/mindx/xcareer-lv-3-test-forked (1)/src/TodoList.js"],"sourcesContent":["import React from \"react\";\nimport { FaRegCircle, FaRegCheckCircle } from \"react-icons/fa\";\nimport { DragDropContext, Droppable, Draggable } from \"react-beautiful-dnd\";\n\nconst TodoList = ({ tasks, toggleDone, showUndoneOnly, onDragEnd }) => {\n  const filteredTasks = showUndoneOnly\n    ? tasks.filter((task) => !task.done)\n    : tasks;\n\n  const calculateDaysLeft = (dueDate) => {\n    if (!dueDate) return null;\n    const today = new Date();\n    const due = new Date(dueDate);\n    const timeDiff = due.getTime() - today.getTime();\n    const daysLeft = Math.ceil(timeDiff / (1000 * 3600 * 24));\n    return daysLeft;\n  };\n\n  return (\n    <DragDropContext onDragEnd={onDragEnd}>\n      <Droppable droppableId=\"tasks\">\n        {(provided) => (\n          <div\n            {...provided.droppableProps}\n            ref={provided.innerRef}\n            className=\"todo-list-container\"\n          >\n            {filteredTasks.map((task, index) => (\n              <Draggable\n                key={task.id}\n                draggableId={task.id.toString()}\n                index={index}\n              >\n                {(provided) => (\n                  <div\n                    ref={provided.innerRef}\n                    {...provided.draggableProps}\n                    {...provided.dragHandleProps}\n                    className={`todo-item-container ${task.done ? \"done\" : \"\"}`}\n                  >\n                    {task.done ? (\n                      <FaRegCheckCircle\n                        color=\"#9a9a9a\"\n                        className=\"item-done-button\"\n                        onClick={() => toggleDone(task.id)}\n                      />\n                    ) : (\n                      <FaRegCircle\n                        color=\"#9a9a9a\"\n                        className=\"item-done-button\"\n                        onClick={() => toggleDone(task.id)}\n                      />\n                    )}\n                    <div className=\"item-title\">{task.title}</div>\n                    {task.dueDate && (\n                      <div className=\"due-date\">\n                        Due in {calculateDaysLeft(task.dueDate)} days\n                      </div>\n                    )}\n                  </div>\n                )}\n              </Draggable>\n            ))}\n            {provided.placeholder}\n          </div>\n        )}\n      </Droppable>\n    </DragDropContext>\n  );\n};\n\nexport default TodoList;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}