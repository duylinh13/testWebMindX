{"ast":null,"code":"var _jsxFileName = \"D:\\\\testMindX\\\\mindx\\\\xcareer-lv-3-test-forked (1)\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\n// App.js\nimport React, { useEffect } from \"react\";\nimport TodoList from \"./TodoList\";\nimport TodoListHeader from \"./TodoListHeader\";\nimport Form from \"./Form\";\nimport Footer from \"./Footer\";\nimport { Routes, Route } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  _s();\n  const [tasks, setTasks] = React.useState([]);\n  useEffect(() => {\n    const storedTasks = JSON.parse(localStorage.getItem(\"tasks\")) || [];\n    setTasks(storedTasks);\n  }, []);\n  const addTask = (title, dueDate) => {\n    const newTask = {\n      title,\n      done: false,\n      dueDate\n    };\n    setTasks([...tasks, newTask]);\n    localStorage.setItem(\"tasks\", JSON.stringify([...tasks, newTask]));\n  };\n  const toggleShowNotFinished = value => {\n    // Handle the state change of showing not finished tasks\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(Routes, {\n      children: /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        element: /*#__PURE__*/_jsxDEV(Home, {\n          tasks: tasks,\n          addTask: addTask,\n          toggleShowNotFinished: toggleShowNotFinished\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"bBd6yqkqV9dlkj9ENgRyXKaiXpk=\");\n_c = App;\nconst Home = _ref => {\n  let {\n    tasks,\n    addTask,\n    toggleShowNotFinished\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(TodoListHeader, {\n        toggleShowNotFinished: toggleShowNotFinished\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TodoList, {\n        tasks: tasks,\n        showNotFinishedOnly: showNotFinishedOnly\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form, {\n        addTask: addTask\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n};\n_c2 = Home;\nvar _c, _c2;\n$RefreshReg$(_c, \"App\");\n$RefreshReg$(_c2, \"Home\");","map":{"version":3,"names":["React","useEffect","TodoList","TodoListHeader","Form","Footer","Routes","Route","jsxDEV","_jsxDEV","App","_s","tasks","setTasks","useState","storedTasks","JSON","parse","localStorage","getItem","addTask","title","dueDate","newTask","done","setItem","stringify","toggleShowNotFinished","value","className","children","path","element","Home","fileName","_jsxFileName","lineNumber","columnNumber","_c","_ref","showNotFinishedOnly","_c2","$RefreshReg$"],"sources":["D:/testMindX/mindx/xcareer-lv-3-test-forked (1)/src/App.js"],"sourcesContent":["// App.js\nimport React, { useEffect } from \"react\";\nimport TodoList from \"./TodoList\";\nimport TodoListHeader from \"./TodoListHeader\";\nimport Form from \"./Form\";\nimport Footer from \"./Footer\";\nimport { Routes, Route } from \"react-router-dom\";\n\nexport default function App() {\n  const [tasks, setTasks] = React.useState([]);\n\n  useEffect(() => {\n    const storedTasks = JSON.parse(localStorage.getItem(\"tasks\")) || [];\n    setTasks(storedTasks);\n  }, []);\n\n  const addTask = (title, dueDate) => {\n    const newTask = { title, done: false, dueDate };\n    setTasks([...tasks, newTask]);\n    localStorage.setItem(\"tasks\", JSON.stringify([...tasks, newTask]));\n  };\n\n  const toggleShowNotFinished = (value) => {\n    // Handle the state change of showing not finished tasks\n  };\n\n  return (\n    <div className=\"App\">\n      <Routes>\n        <Route\n          path=\"/\"\n          element={\n            <Home\n              tasks={tasks}\n              addTask={addTask}\n              toggleShowNotFinished={toggleShowNotFinished}\n            />\n          }\n        />\n      </Routes>\n    </div>\n  );\n}\n\nconst Home = ({ tasks, addTask, toggleShowNotFinished }) => {\n  return (\n    <div className=\"App\">\n      <div className=\"container\">\n        <TodoListHeader toggleShowNotFinished={toggleShowNotFinished} />\n        <TodoList tasks={tasks} showNotFinishedOnly={showNotFinishedOnly} />\n        <Form addTask={addTask} />\n      </div>\n      <Footer />\n    </div>\n  );\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}