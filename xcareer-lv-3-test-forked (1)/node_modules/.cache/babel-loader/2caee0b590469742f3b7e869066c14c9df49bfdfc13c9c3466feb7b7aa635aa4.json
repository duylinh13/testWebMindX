{"ast":null,"code":"var _jsxFileName = \"D:\\\\testMindX\\\\mindx\\\\xcareer-lv-3-test-forked (1)\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport \"./styles.css\";\nimport React, { useState, useEffect } from \"react\";\nimport { Routes, Route } from \"react-router-dom\";\nimport TodoList from \"./TodoList\";\nimport TodoListHeader from \"./TodoListHeader\";\nimport Form from \"./Form\";\nimport Footer from \"./Footer\";\nimport { FaRegCircle, FaRegCheckCircle } from \"react-icons/fa\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  // State for showing only undone tasks\n  const [showUndoneOnly, setShowUndoneOnly] = useState(false);\n  const toggleShowUndoneOnly = () => {\n    setShowUndoneOnly(!showUndoneOnly);\n  };\n\n  // State for tasks\n  const [tasks, setTasks] = useState(() => {\n    const storedTasks = JSON.parse(localStorage.getItem(\"tasks\"));\n    return storedTasks || [{\n      id: 1,\n      title: \"Build some websites\",\n      done: false,\n      dueDate: \"2023-11-15\"\n    }, {\n      id: 2,\n      title: \"Do exercises\",\n      done: false,\n      dueDate: \"2023-11-20\"\n    }, {\n      id: 3,\n      title: \"Go shopping\",\n      done: false,\n      dueDate: \"2023-11-25\"\n    }, {\n      id: 4,\n      title: \"House cleaning\",\n      done: true,\n      dueDate: null\n    }];\n  });\n\n  // State for undone tasks count\n  const [undoneTasksCount, setUndoneTasksCount] = useState(0);\n  useEffect(() => {\n    updateUndoneTasksCount();\n  }, [tasks]);\n  const toggleDone = taskId => {\n    setTasks(prevTasks => prevTasks.map(task => task.id === taskId ? {\n      ...task,\n      done: !task.done\n    } : task));\n  };\n  const addTask = title => {\n    const newTask = {\n      id: tasks.length + 1,\n      title: title,\n      done: false,\n      dueDate: null\n    };\n    setTasks(prevTasks => {\n      const newTasks = [...prevTasks, newTask];\n      localStorage.setItem(\"tasks\", JSON.stringify(newTasks));\n      return newTasks;\n    });\n    updateUndoneTasksCount();\n  };\n  const updateUndoneTasksCount = () => {\n    const undoneCount = tasks.filter(task => !task.done).length;\n    setUndoneTasksCount(undoneCount);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(Routes, {\n      children: /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        element: /*#__PURE__*/_jsxDEV(Home, {\n          tasks: tasks,\n          addTask: addTask,\n          toggleDone: toggleDone,\n          showUndoneOnly: showUndoneOnly,\n          toggleShowUndoneOnly: toggleShowUndoneOnly\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"6fQMJ1KRYpGZAWFecvSRpqa67hg=\");\n_c = App;\nconst Home = _ref => {\n  let {\n    tasks,\n    addTask,\n    toggleDone,\n    showUndoneOnly,\n    toggleShowUndoneOnly\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(TodoListHeader, {\n        showUndoneOnly: showUndoneOnly,\n        toggleShowUndoneOnly: toggleShowUndoneOnly\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TodoList, {\n        tasks: tasks,\n        toggleDone: toggleDone,\n        showUndoneOnly: showUndoneOnly\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form, {\n        addTask: addTask\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 99,\n    columnNumber: 5\n  }, this);\n};\n_c2 = Home;\nexport default App;\nvar _c, _c2;\n$RefreshReg$(_c, \"App\");\n$RefreshReg$(_c2, \"Home\");","map":{"version":3,"names":["React","useState","useEffect","Routes","Route","TodoList","TodoListHeader","Form","Footer","FaRegCircle","FaRegCheckCircle","jsxDEV","_jsxDEV","App","_s","showUndoneOnly","setShowUndoneOnly","toggleShowUndoneOnly","tasks","setTasks","storedTasks","JSON","parse","localStorage","getItem","id","title","done","dueDate","undoneTasksCount","setUndoneTasksCount","updateUndoneTasksCount","toggleDone","taskId","prevTasks","map","task","addTask","newTask","length","newTasks","setItem","stringify","undoneCount","filter","className","children","path","element","Home","fileName","_jsxFileName","lineNumber","columnNumber","_c","_ref","_c2","$RefreshReg$"],"sources":["D:/testMindX/mindx/xcareer-lv-3-test-forked (1)/src/App.js"],"sourcesContent":["import \"./styles.css\";\nimport React, { useState, useEffect } from \"react\";\nimport { Routes, Route } from \"react-router-dom\";\nimport TodoList from \"./TodoList\";\nimport TodoListHeader from \"./TodoListHeader\";\nimport Form from \"./Form\";\nimport Footer from \"./Footer\";\nimport { FaRegCircle, FaRegCheckCircle } from \"react-icons/fa\";\n\nconst App = () => {\n  // State for showing only undone tasks\n  const [showUndoneOnly, setShowUndoneOnly] = useState(false);\n\n  const toggleShowUndoneOnly = () => {\n    setShowUndoneOnly(!showUndoneOnly);\n  };\n\n  // State for tasks\n  const [tasks, setTasks] = useState(() => {\n    const storedTasks = JSON.parse(localStorage.getItem(\"tasks\"));\n    return (\n      storedTasks || [\n        {\n          id: 1,\n          title: \"Build some websites\",\n          done: false,\n          dueDate: \"2023-11-15\",\n        },\n        { id: 2, title: \"Do exercises\", done: false, dueDate: \"2023-11-20\" },\n        { id: 3, title: \"Go shopping\", done: false, dueDate: \"2023-11-25\" },\n        { id: 4, title: \"House cleaning\", done: true, dueDate: null },\n      ]\n    );\n  });\n\n  // State for undone tasks count\n  const [undoneTasksCount, setUndoneTasksCount] = useState(0);\n\n  useEffect(() => {\n    updateUndoneTasksCount();\n  }, [tasks]);\n\n  const toggleDone = (taskId) => {\n    setTasks((prevTasks) =>\n      prevTasks.map((task) =>\n        task.id === taskId ? { ...task, done: !task.done } : task\n      )\n    );\n  };\n\n  const addTask = (title) => {\n    const newTask = {\n      id: tasks.length + 1,\n      title: title,\n      done: false,\n      dueDate: null,\n    };\n    setTasks((prevTasks) => {\n      const newTasks = [...prevTasks, newTask];\n      localStorage.setItem(\"tasks\", JSON.stringify(newTasks));\n      return newTasks;\n    });\n    updateUndoneTasksCount();\n  };\n\n  const updateUndoneTasksCount = () => {\n    const undoneCount = tasks.filter((task) => !task.done).length;\n    setUndoneTasksCount(undoneCount);\n  };\n\n  return (\n    <div className=\"App\">\n      <Routes>\n        <Route\n          path=\"/\"\n          element={\n            <Home\n              tasks={tasks}\n              addTask={addTask}\n              toggleDone={toggleDone}\n              showUndoneOnly={showUndoneOnly}\n              toggleShowUndoneOnly={toggleShowUndoneOnly}\n            />\n          }\n        />\n      </Routes>\n    </div>\n  );\n};\n\nconst Home = ({\n  tasks,\n  addTask,\n  toggleDone,\n  showUndoneOnly,\n  toggleShowUndoneOnly,\n}) => {\n  return (\n    <div className=\"App\">\n      <div className=\"container\">\n        <TodoListHeader\n          showUndoneOnly={showUndoneOnly}\n          toggleShowUndoneOnly={toggleShowUndoneOnly}\n        />\n        <TodoList\n          tasks={tasks}\n          toggleDone={toggleDone}\n          showUndoneOnly={showUndoneOnly}\n        />\n        <Form addTask={addTask} />\n      </div>\n      <Footer />\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}